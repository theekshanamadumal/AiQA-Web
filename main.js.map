{"version":3,"sources":["./src/app/features/home/home.component.ts","./src/app/features/home/home.component.html","./src/app/features/home/documents/documents.component.html","./src/app/features/home/documents/documents.component.ts","./src/app/core/services/history.service.ts","./src/environments/environment.ts","./src/app/core/models/question.model.ts","./src/app/shared/app-constants/app-constants.ts","./src/app/core/core-routing.module.ts","./src/app/shared/helpers/auth.ts","./src/app/features/home/navbar/navbar.component.ts","./src/app/features/home/navbar/navbar.component.html","./src/app/core/core.component.ts","./src/app/core/core.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/features/home/chat/chat.component.ts","./src/app/features/home/chat/chat.component.html","./src/app/features/home/sidebar/sidebar.component.ts","./src/app/features/home/sidebar/sidebar.component.html","./src/app/core/interceptors/auth.interceptor.ts","./src/app/core/services/chat.service.ts","./src/app/core/services/request-manager.service.ts","./src/app/shared/url-configs/url-configs.ts","./src/app/core/core.module.ts","./src/app/core/models/chat-model.ts","./src/app/app-routing.module.ts","./src/app/features/logon/logon.component.ts","./src/app/features/logon/logon.component.html","./src/app/core/services/authentication.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2D;AAEQ;;;;;;;ICgE7D,0EAA4C;IAC1C,0EAA2C;IACzC,0EAAuD;IACrD,2EAA8B;IAAA,qEAAU;IAAA,4DAAO;IACjD,4DAAM;IACN,0EAAkB;IAAA,qEAAU;IAAA,4DAAM;IACpC,4DAAM;IACR,4DAAM;;ADrDL,MAAM,aAAa;IAUxB,YAAoB,cAA+B,EACzC,QAAkB,EAClB,WAAwB,EACxB,MAAqB;QAHX,mBAAc,GAAd,cAAc,CAAiB;QACzC,aAAQ,GAAR,QAAQ,CAAU;QAClB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAe;QAV/B,UAAK,GAAqB,EAAE,CAAC;QAG7B,cAAS,GAAY,KAAK,CAAC;QAC3B,sBAAiB,GAAY,KAAK,CAAC;IAMA,CAAC;IAEpC,QAAQ;IAER,CAAC;IACD,YAAY,CAAC,QAAgB;QAC3B,qCAAqC;QACrC,MAAM,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACrD,SAAS,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC/B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACrC,SAAS,CAAC,MAAM,EAAE,CAAC;QACnB,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAC7B,SAAS,CAAC,MAAM,EAAE,CAAC;QAEnB,uBAAuB;QACvB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,mBAAmB,GAAG,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAClE,CAAC;IAEC,gBAAgB;QACd,IAAG,IAAI,CAAC,YAAY,EAAC;YACnB,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACrD,MAAM,aAAa,GAAkB,IAAI,gFAAa,EAAE,CAAC;YAGzD,aAAa,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;YAE7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YAEtB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;gBACpE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBAEtB,MAAM,SAAS,GAAc,IAAI,wEAAS,EAAE,CAAC;gBAC7C,wCAAwC;gBACxC,MAAM,UAAU,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC;gBAC1C,OAAO,CAAC,GAAG,CAAC,cAAc,EAAC,UAAU,CAAC,CAAC;gBACvC,MAAM,GAAG,GAAE,QAAQ,CAAC,aAAa,CAAC,CAAC;gBACnC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAC,GAAG,CAAC,CAAC;gBACzB,MAAM,cAAc,GAAE;oBACpB,UAAU,EAAE,UAAU;iBACzB,CAAC;gBACA,SAAS,CAAC,aAAa,GAAG,cAAc,CAAC;gBACzC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAC,SAAS,CAAC,aAAa,CAAC,CAAC;gBAEvD,MAAM,YAAY,GAAE;oBAClB,OAAO,EAAE,QAAQ,CAAC,YAAY;oBAC9B,eAAe,EAAE,QAAQ,CAAC,WAAW;iBACxC;gBACC,SAAS,CAAC,WAAW,GAAG,YAAY,CAAC;gBACrC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;gBAC9B,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;gBAC3B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACvB,8CAA8C;YAChD,CAAC,EAAE,KAAK,CAAC,EAAE;gBACT,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACzB,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;SAC/B;IACH,CAAC;IAED,oBAAoB,CAAC,KAAa;QAChC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;IACjC,CAAC;;0EA3EU,aAAa;6FAAb,aAAa;QCrB1B,yEAAqB;QAEnB,yEAA2B;QAE3B,yEAAkB;QAIhB,wEAAyB;QAEzB,yEAA6B;QAC3B,yEAAiB;QACf,yEAAkC;QAChC,yEAA8B;QAC5B,yEAAgE;QAC9D,yEAA8D;QAC5D,qEAAoF;QACpF,sEAAI;QAAA,qFAAyB;QAAA,4DAAK;QACpC,4DAAM;QACN,0EAAiB;QACf,0EAAsB;QAClB,2EAAkB;QACd,2EAAuB;QACnB,yEAAsG;QAAjF,iIAAS,iBAAa,wDAAwD,CAAC,IAAC;QAAC,kHAAsD;QAAA,4DAAI;QACpK,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EAAsB;QAClB,2EAAkB;QACd,2EAAuB;QACnB,yEACI;QADiB,iIAAS,iBAAa,gGAC3C,CAAC,IAAE;QAAC,6HACN;QAAA,4DAAI;QACN,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EAAiB;QACf,0EAAsB;QAClB,2EAAkB;QACd,2EAAuB;QACnB,yEACI;QADiB,iIAAS,iBAAa,mGAC3C,CAAC,IAAE;QAAC,kIACN;QAAA,4DAAI;QACN,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EAAsB;QAClB,2EAAkB;QACd,2EAAuB;QACnB,yEAAuG;QAAlF,iIAAS,iBAAa,yDAAyD,CAAC,IAAC;QAAC,mHAAuD;QAAA,4DAAI;QACtK,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QAIN,4DAAM;QAEJ,6EACmG;QAD3D,wLAA0B,yFAAgB,sBAAkB,IAAlC;QAAlE,4DACmG;QACnG,8EACgC;QAA9B,sIAAS,sBAAkB,IAAE;QAAC,gEAAI;QAAA,4DAAS;QAC/C,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,4GAOM;QACN,0EAAiB;QACf,2EAAyC;QACvC,gFACoD;QAAlD,oKAAoB,gCAA4B,IAAC;QAAC,4DAAW;QACjE,4DAAM;QACN,2EAAyC;QACvC,gFAA0G;QAC5G,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAER,4DAAM;;QAzEyC,0DAA4B;QAA5B,yFAA4B;QA8CvB,2DAA0B;QAA1B,qFAA0B;QAOlD,0DAAoB;QAApB,+EAAoB;QAU5B,0DAAe;QAAf,4EAAe;QAIV,0DAA0E;QAA1E,yPAA0E;;;;;;;;;;;;;;;;;;;;;ICjFjG,yEAA0F;IACxF,wEAA6B;IAC3B,4EAE6C;IAC3C,uDACF;IAAA,4DAAS;IACX,4DAAK;IACL,yEAAkF;IAChF,yEAA4B;IAC1B,uDACF;IAAA,4DAAM;IACR,4DAAM;IACR,4DAAM;;;;IAVA,0DAA0D;IAA1D,kHAA0D;IAE1D,0DACF;IADE,oGACF;IAEG,0DAAwC;IAAxC,oGAAwC;IAEzC,0DACF;IADE,yGACF;;ACJC,MAAM,kBAAkB;IAG7B;QAFS,oBAAe,GAA+B,EAAE,CAAC;IAE1C,CAAC;IAEjB,QAAQ;IACR,CAAC;;oFANU,kBAAkB;kGAAlB,kBAAkB;QDR/B,yEAA2D;QACzD,8GAaM;QACR,4DAAM;;QAdmD,0DAAoB;QAApB,wFAAoB;;;;;;;;;;;;;;;;;;;;;;AEOpE,MAAM,cAAc;IAEzB,YAAoB,cAAoC,EAC5C,SAAqB;QADb,mBAAc,GAAd,cAAc,CAAsB;QAC5C,cAAS,GAAT,SAAS,CAAY;IAC3B,CAAC;IAEA,oBAAoB,CAAC,EAAU;QACpC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,mBAAmB,CAAC,EAAE,CAAC;QACjE,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACtC,CAAC;IAEM,oBAAoB,CAAC,EAAU,EAAE,SAAiB;QACvD,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,mBAAmB,CAAC,EAAE,CAAC;QACjE,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;QACvC,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,EAAE,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC;QAC5D,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACtC,CAAC;;4EAjBU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;ACNtB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,2DAA2D;IAC3D,0DAA0D;IAC1D,iBAAiB,EAAE,uBAAuB,CAAC,cAAc;IACzD,2GAA2G;CAC5G,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACjBnE;AAAA;AAAO,MAAM,aAAa;CAIzB;;;;;;;;;;;;;ACND;AAAA;AAAO,MAAM,WAAW;;AACJ,iBAAK,GAAG,OAAO,CAAC;AAChB,qBAAS,GAAG,WAAW,CAAC;AACxB,gBAAI,GAAW,MAAM,CAAC;;;;;;;;;;;;;ACF1C;AAAA;AAAA;AAAA;AAAA;AAAuD;AACN;;;AAEjD,MAAM,MAAM,GAAW,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,6DAAa,EAAE,CAAC,CAAC;AAMzD,MAAM,iBAAiB;;kFAAjB,iBAAiB;gGAAjB,iBAAiB;oGAHnB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,iBAAiB,uFAFlB,4DAAY;;;;;;;;;;;;;ACPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAEtD,MAAM,eAAe,GAAG,GAAc,EAAE;IAC3C,MAAM,IAAI,GAAc,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,wEAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3E,OAAO,IAAI,CAAC;AAChB,CAAC;AAEM,MAAM,QAAQ,GAAG,CAAC,IAAe,EAAQ,EAAE;IAC9C,YAAY,CAAC,OAAO,CAAC,wEAAW,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;AACjE,CAAC;AAEM,MAAM,SAAS,GAAG,GAAS,EAAE;IAChC,YAAY,CAAC,UAAU,CAAC,wEAAW,CAAC,IAAI,CAAC,CAAC;AAC9C,CAAC;AAEM,MAAM,UAAU,GAAG,GAAY,EAAE;IACpC,MAAM,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,wEAAW,CAAC,IAAI,CAAC,CAAC;IACpD,IAAG,IAAI,EAAC;QACJ,OAAO,IAAI,CAAC;KACf;IACD,OAAO,KAAK,CAAC;AACjB,CAAC;;;;;;;;;;;;;ACtBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8E;AAML;;;;;AAOlE,MAAM,eAAe;IAQ1B,YACU,qBAA4C,EAC5C,MAAc,EACd,MAAqB;QAFrB,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QARrB,aAAQ,GAAsB,IAAI,0DAAY,EAAE,CAAC;QACjD,kBAAa,GAAsB,IAAI,0DAAY,EAAE,CAAC;IAQ1D,CAAC;IAEP,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,mFAAe,EAAE,CAAC;IAChC,CAAC;IAED,MAAM;QACF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAE/B,CAAC;;8EArBU,eAAe;+FAAf,eAAe;QCY5B,yEAAwC;QACtC,yEAA6B;QAC3B,oEAEM;QAUN,sEAAK;QACH,yEAA4E;QAAnB,oIAAS,YAAQ,IAAC;QACzE,oEAAG;QAAA,kEAAqC;QAAA,4DAAI;QAC9C,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;;;;;;;;;;;;;;;;;ACtCC,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,oEAAG;QAAA,sEAAW;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;ACSX,MAAM,YAAY;IAGvB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAFlC,UAAK,GAAG,UAAU,CAAC;IAEkB,CAAC;IAEtC,QAAQ;IACR,CAAC;;wEANU,YAAY;4FAAZ,YAAY;QCTzB,2EAA+B;;;;;;;;;;;;;;ACC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACQ;AACS;AAC5B;AACJ;AAEoC;AACrC;AAEc;AACT;AACC;AACiB;AACM;AACL;AACH;AACc;AACH;AACS;AACf;;;;;AAiC7D,MAAM,SAAS;;kEAAT,SAAS;yFAAT,SAAS,cAFR,2DAAY;8FAPb,CAAC,6EAAc,EAAE,wDAAQ;QAClC;YACA,OAAO,EAAE,sEAAiB;YAC1B,QAAQ,EAAE,oFAAe;YACzB,KAAK,EAAE,IAAI;SACV;KACF,YAjBQ;YACP,oEAAgB;YAChB,4FAAuB;YACvB,uEAAa;YACb,4DAAY;YACZ,4DAAU;YACV,0DAAW;YACX,qEAAgB;YAChB,kEAAmB;YACnB,uDAAY,CAAC,OAAO,EAAE;SACvB;oIAUU,SAAS,mBA5BlB,2DAAY;QACZ,+EAAc;QACd,4EAAa;QACb,0FAAgB;QAChB,uFAAe;QACf,gGAAkB;QAClB,iFAAa,aAGb,oEAAgB;QAChB,4FAAuB;QACvB,uEAAa;QACb,4DAAY;QACZ,4DAAU;QACV,0DAAW;QACX,qEAAgB;QAChB,kEAAmB;mEAdnB,4EAAa,GACb,0FAAgB;IAChB,uFAAe,qPAEf,iFAAa;IADb,gGAAkB;;;;;;;;;;;;;AC9BtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuE;AAEZ,CAAE,mCAAmC;;;;;;;;ICmB9E,4EAC4H;IADpF,kXAAmC;IAA3E,4DAC4H;;;IADpF,6FAAmC;;;;IAE3E,6EAA8D;IAAtB,4ZAAqB;IAAC,uEAAE;IAAA,4DAAS;;;;IACzE,6EAAgE;IAAxB,8ZAAuB;IAAC,uEAAE;IAAA,4DAAS;;;;IApBrF,wEAAwD;IACtD,wEAAiB;IACf,yEAAoB;IAClB,sEAAK;IAAA,oEAA6C;IAAA,4DAAM;IACxD,yEAAyB;IACvB,qEAAI;IAAA,8DAAG;IAAA,4DAAK;IACZ,oEAAG;IAAA,uDAAmC;IAAA,4DAAI;IAC5C,4DAAM;IACR,4DAAM;IACR,4DAAK;IACL,yEAAoE;IAClE,0EAAoB;IAClB,uEAAK;IAAA,qEAA4D;IAAA,4DAAM;IACvE,0EAAyB;IACvB,sEAAI;IAAA,mEAAO;IAAA,4DAAK;IAChB,qEAA4C;IAAA,wDAC1C;IAAA,iEAAI;IACJ,+HAC4H;IAC5H,iIAAyE;IACzE,iIAA2E;IAC7E,4DAAI;IACN,4DAAM;IACR,4DAAM;IACR,4DAAK;IACP,qEAAe;;;;;IAnBJ,0DAAmC;IAAnC,iGAAmC;IAIxB,0DAA+C;IAA/C,6KAA+C;IAK1D,0DAAwC;IAAxC,sGAAwC;IAAC,0DAC1C;IAD0C,sGAC1C;IAE6F,0DAA6B;IAA7B,4FAA6B;IACjH,0DAA6B;IAA7B,4FAA6B;IAC7B,0DAA6B;IAA7B,4FAA6B;;ADbjD,MAAM,aAAa;IAKxB,YAAoB,IAAgB,EAAS,MAAqB;QAA9C,SAAI,GAAJ,IAAI,CAAY;QAAS,WAAM,GAAN,MAAM,CAAe;QAFxD,qBAAgB,GAAyB,IAAI,0DAAY,EAAE,CAAC;IAEA,CAAC;IAEvE,QAAQ,CAAC,KAAa;QACpB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAED,QAAQ,CAAC,KAAa;QACpB,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC;QAC5D,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC;QAC1D,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,2BAA2B;QAC9H,MAAM,QAAQ,GAAG,MAAM,CAAC,CAAC,yBAAyB;QAClD,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,WAAW,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC;QAC1E,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,iBAAiB,GAAG,IAAI,CAAC,CAAC,6BAA6B;QACzE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,gBAAgB,GAAG,EAAE,CAAC,CAAC,6BAA6B;QACtE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,8BAA8B,EAAE,oBAAoB,CAAC,CAAC;IAC5E,CAAC;IAED,UAAU,CAAC,KAAa;QACtB,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC;QAC5D,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC;QAC1D,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,2BAA2B;QAC9H,MAAM,QAAQ,GAAG,KAAK,CAAC,CAAC,uBAAuB;QAC/C,IAAI,CAAC,qBAAqB,CAAC,QAAQ,EAAE,WAAW,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC;QAC1E,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,iBAAiB,GAAG,IAAI,CAAC,CAAC,6BAA6B;QACzE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,gBAAgB,GAAG,EAAE,CAAC,CAAC,6BAA6B;QACtE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,8BAA8B,EAAE,oBAAoB,CAAC,CAAC;IAC5E,CAAC;IAED,qBAAqB,CAAC,QAAgB,EAAE,WAAmB,EAAE,YAAoB,EAAE,QAAgB;QACjG,MAAM,YAAY,GAAG;YACnB,QAAQ,EAAE,QAAQ;YAClB,WAAW,EAAE,WAAW;YACxB,YAAY,EAAE,YAAY;YAC1B,QAAQ,EAAE,QAAQ;SACnB,CAAC;QAEF,yDAAyD;QACzD,MAAM,MAAM,GAAG,GAAG,wEAAW,CAAC,iBAAiB,WAAW,CAAC;QAE3D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,SAAS,CAC5C,CAAC,QAAQ,EAAE,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,QAAQ,CAAC,CAAC;QACvD,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;QAClD,CAAC,CACF,CAAC;IACJ,CAAC;;0EApDU,aAAa;6FAAb,aAAa;QCX1B,yEAAgB;QACd,yEAAqB;QACnB,yEAAsB;QACpB,qEAAI;QACF,6HAyBe;QACjB,4DAAK;QACP,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA7BiC,0DAAU;QAAV,8EAAU;;;;;;;;;;;;;;;;;;;;ACK1C,MAAM,gBAAgB;IAC3B,8CAA8C;IAC9C,sCAAsC;IAEtC,uBAAuB;IACvB,kCAAkC;IAElC,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAErD,QAAQ;IACR,CAAC;;gFAVU,gBAAgB;gGAAhB,gBAAgB;QCT7B,yEAAkB;QAChB,yEAA4B;QAC1B,uEAAqB;QACnB,oEAA8D;QAChE,4DAAI;QACN,4DAAM;QA2BR,4DAAM;;;;;;;;;;;;;;AC9BN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+G;AAE1E;AACoC;;;;;AAKlE,MAAM,eAAe;IAC1B,YAAoB,MAAc,EACxB,WAAkC,EAClC,MAAqB;QAFX,WAAM,GAAN,MAAM,CAAQ;QACxB,gBAAW,GAAX,WAAW,CAAuB;QAClC,WAAM,GAAN,MAAM,CAAe;IAAG,CAAC;IAEnC,SAAS,CACP,OAAyB,EACzB,IAAiB;;QAEjB,MAAM,SAAS,SAAG,mFAAe,EAAE,0CAAE,KAAK,CAAC;QAE3C,IAAI,SAAS,EAAE;YACb,MAAM,WAAW,GAAG,OAAO,CAAC,KAAK,CAAC;gBAChC,UAAU,EAAE;oBACV,aAAa,EAAE,UAAU,SAAS,EAAE;iBACrC;aACF,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,GAAG,EAAE,GAAE,CAAC,EACjD,CAAC,GAAQ,EAAE,EAAE;gBACX,IAAI,GAAG,YAAY,sEAAiB,EAAE;oBACpC,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAC;wBACrB,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;qBAC3E;oBACD,MAAM,IAAI,GAAG,mFAAe,EAAE,CAAC;oBAC/B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;wBAC5D,6EAAS,EAAE,CAAC;wBACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACjC,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;oBACxD,CAAC,CAAC,CAAC;oBACH,OAAO,KAAK,CAAC;iBACd;YACH,CAAC,CACA,CAAC;SACH;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;;8EAnCU,eAAe;kGAAf,eAAe,WAAf,eAAe;;;;;;;;;;;;;;;;;;;;;ACDrB,MAAM,WAAW;IAEtB,YAAoB,cAAoC,EAC9C,SAAqB;QADX,mBAAc,GAAd,cAAc,CAAsB;QAC9C,cAAS,GAAT,SAAS,CAAY;IAAI,CAAC;IAEpC,SAAS;QACP,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC;QACxD,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACtC,CAAC;IAED,cAAc,CAAC,aAAa;QAC1B,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,gBAAgB,CAAC,EAAE,CAAC;QAC9D,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC;IACtD,CAAC;;sEAdU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACJpB;AAAA;AAAA;AAAA;AAAA;AAA2D;;;AAIpD,MAAM,qBAAqB;IAG9B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,WAAM,GAAG,wEAAW,CAAC,iBAAiB,CAAC;IAEP,CAAC;IAElC,GAAG,CAAC,QAAgB;QACvB,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAE,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC9B,CAAC;IAEM,IAAI,CAAC,QAAgB,EAAE,IAAS;QACnC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAE,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IAEM,GAAG,CAAC,QAAgB,EAAE,IAAS;QAClC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAE,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACpC,CAAC;IAEM,MAAM,CAAC,QAAgB;QAC1B,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAE,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;;0FAvBQ,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB,mBAFlB,MAAM;;;;;;;;;;;;;;;;;ACCf,MAAM,UAAU;IAGrB;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAEM,OAAO;QAEZ,IAAI,CAAC,OAAO,GAAG;YACb;gBACE,GAAG,EAAE,UAAU;gBACf,KAAK,EAAE,gBAAgB;aACxB;YACD;gBACE,GAAG,EAAE,mBAAmB;gBACxB,KAAK,EAAE,uCAAuC;aAC/C;YACD;gBACE,GAAG,EAAE,mBAAmB;gBACxB,KAAK,EAAE,iEAAiE;aACzE;YACD;gBACE,GAAG,EAAE,gBAAgB;gBACrB,KAAK,EAAE,MAAM;aACd;YACD;gBACE,GAAG,EAAE,OAAO;gBACZ,KAAK,EAAE,YAAY;aACpB;YACD;gBACE,GAAG,EAAE,QAAQ;gBACb,KAAK,EAAE,aAAa;aACrB;SACF,CAAC;IACJ,CAAC;IAEM,QAAQ,CAAC,IAAqB;QACnC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAEM,aAAa,CAAC,GAAW;QAC9B,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IAChE,CAAC;IAEM,SAAS;QACd,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;IAC7B,CAAC;;oEA/CU,UAAU;6FAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;;;;;;;;;;;;;ACHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAEW;AACT;;AAY1C,MAAM,UAAU;;oEAAV,UAAU;yFAAV,UAAU;6FALZ;YACP,4DAAY;YACZ,sEAAiB;SAClB;mIAEU,UAAU,mBAPnB,6DAAa,aAGb,4DAAY;QACZ,sEAAiB;;;;;;;;;;;;;ACVrB;AAAA;AAAO,MAAM,SAAS;IAAtB;QAII,sBAAiB,GAAY,KAAK,CAAC,CAAC,4CAA4C;IAEpF,CAAC;CAAA;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACW;AACH;;;AAG/D,MAAM,MAAM,GAAW;IACC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,8EAAc,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE,EAAC;IACrE,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,2EAAa,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,EAAC;CAC9F,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;ACXxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AAGb;;;;;;AAQhD,MAAM,cAAc;IAMzB,YAAoB,WAAwB,EAClC,WAAkC,EAClC,MAAc,EACd,MAAqB;QAHX,gBAAW,GAAX,WAAW,CAAa;QAClC,gBAAW,GAAX,WAAW,CAAuB;QAClC,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAP/B,cAAS,GAAY,KAAK,CAAC;QAC3B,yBAAoB,GAAY,KAAK,CAAC;QACtC,sBAAiB,GAAG,EAAE,CAAC;IAKY,CAAC;IAEpC,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SAChE,CAAC;IACJ,CAAC;IACD,KAAK;QACH,4BAA4B;QAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,+DAA+D;IAClG,CAAC;IAED,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;IAE3C,QAAQ;QACN,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QAE/B,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;YAC1B,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;YAClC,OAAO;SACR;QAED,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAC5E,QAAQ,CAAC,EAAE;YACP,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;YAClC,MAAM,SAAS,GAAc,QAAQ,CAAC;YACtC,4EAAQ,CAAC,SAAS,CAAC,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACpC,CAAC,EACD,KAAK,CAAC,EAAE;YACJ,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;YAClC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC3C,CAAC,CACF,CAAC;IACJ,CAAC;;4EA9CU,cAAc;8FAAd,cAAc;QCb3B,6EAAuB;QA2DnB,oEAEM;QACN,yEAAkC;QAC9B,yEAAwE;QACpE,yEAAuB;QACnB,yEAAqC;QACjC,yEAAwC;QACpC,yEAAkE;QAC9D,yEAAgE;QAC5D,mEAAwC;QACxC,qEAAwC;QAC5C,4DAAM;QACV,4DAAM;QACN,2EAAsB;QAClB,sEAEM;QACN,2EAAsC;QAClC,2EAAkB;QACd,sEAAoF;QACxF,4DAAM;QACN,uEAAK;QACD,2EAAoB;QAChB,8EAAwF;QAAlB,uIAAS,WAAO,IAAC;QACnF,yEACJ;QAAA,4DAAS;QACb,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EAA+C;QAC3C,yEAAqC;QACjC,0EACJ;QAAA,4DAAI;QACJ,yEAAgD;QAC5C,uXACJ;QAAA,4DAAI;QACR,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EAA6E;QACzE,2EAA4C;QACxC,yEAA4D;QACxD,gIACJ;QAAA,4DAAI;QACR,4DAAM;QACV,4DAAM;QACV,4DAAM;QACV,4DAAU;;;;;;;;;;;;;;AC5GV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;AAGlC;;;;;AAKhC,MAAM,qBAAqB;IAC9B,YAAoB,MAAc,EAAU,cAAoC,EACpE,SAAqB;QADb,WAAM,GAAN,MAAM,CAAQ;QAAU,mBAAc,GAAd,cAAc,CAAsB;QACpE,cAAS,GAAT,SAAS,CAAY;IAAG,CAAC;IAErC,KAAK,CAAC,QAAgB,EAAE,QAAgB;QACpC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,CAAC;QACrD,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,EAAC,QAAQ,EAAE,QAAQ,EAAC,CAAC,CAAC;IAC/D,CAAC;IAED,MAAM,CAAC,QAAgB;QACnB,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,CAAC;QACtD,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,EAAC,QAAQ,EAAC,CAAC,CAAC;IACrD,CAAC;IAED,cAAc;;QACV,MAAM,KAAK,SAAG,mFAAe,EAAE,0CAAE,KAAK,CAAC;QACvC,IAAI,CAAC,KAAK,EAAE;YACR,OAAO,IAAI,CAAC;SACf;QACD,MAAM,YAAY,GAAQ,4DAAS,CAAC,KAAK,CAAC,CAAC;QAC3C,OAAO,IAAI,CAAC,GAAG,EAAE,IAAI,YAAY,CAAC,GAAG,GAAG,IAAI,CAAC;IACjD,CAAC;;0FArBQ,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;;;;;;;;;;;;;;;;;;;ACR2B;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AiModelModel } from 'src/app/core/models/ai-model.model';\r\nimport { ChatModel } from 'src/app/core/models/chat-model';\r\nimport { QueryModel } from 'src/app/core/models/query.model';\r\nimport { QuestionModel } from 'src/app/core/models/question.model';\r\nimport { UserModel } from 'src/app/core/models/user.model';\r\nimport { HistoryService } from 'src/app/core/services/history.service';\r\nimport { DatePipe } from '@angular/common';\r\nimport { AppConstant } from 'src/app/shared/app-constants/app-constants';\r\nimport { ChatService } from 'src/app/core/services/chat.service';\r\nimport { AnswerModel } from 'src/app/core/models/answer.model';\r\nimport { getLoggedInUser } from 'src/app/shared/helpers/auth';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { SourceDocumentModel } from 'src/app/core/models/source-document.model';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\n\r\n\r\nexport class HomeComponent implements OnInit {\r\n\r\n\r\n  chats: Array<ChatModel> = [];\r\n  selectedChatIndex: number;\r\n  userQuestion: string;\r\n  isLoading: boolean = false;\r\n  isContainerHidden: boolean = false;\r\n\r\n\r\n  constructor(private historyService : HistoryService,\r\n    private datePipe: DatePipe, \r\n    private chatService: ChatService,\r\n    private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n  copyQuestion(question: string) {\r\n    // Copy the question to the clipboard\r\n    const textField = document.createElement('textarea');\r\n    textField.innerText = question;\r\n    document.body.appendChild(textField);\r\n    textField.select();\r\n    document.execCommand('copy');\r\n    textField.remove();\r\n\r\n    // Show a toast message\r\n    this.toastr.success('Question copied: ' + question, 'Copied');\r\n}\r\n\r\n  onQuestionSubmit() {\r\n    if(this.userQuestion){\r\n      console.log(\"row user question :\",this.userQuestion);\r\n      const questionModel: QuestionModel = new QuestionModel();\r\n\r\n  \r\n      questionModel.user_input = this.userQuestion;\r\n\r\n      this.isLoading = true;\r\n\r\n      this.chatService.generateAnswer(questionModel).subscribe((response) => {\r\n        console.log(response);\r\n\r\n        const chatModel: ChatModel = new ChatModel();\r\n        // console.log(\"chatmodel :\",chatModel);\r\n        const user_input = response[\"user_input\"];\r\n        console.log(\"user input :\",user_input);\r\n        const arr= response[\"format_data\"];\r\n        console.log(\"arr :\",arr);\r\n        const Question_model= {\r\n          user_input: user_input\r\n      };\r\n        chatModel.questionModel = Question_model;\r\n        console.log(\"user question :\",chatModel.questionModel);\r\n        \r\n        const Answer_Model ={\r\n          content: response.bot_response,\r\n          sourceDocuments: response.format_data\r\n      }\r\n        chatModel.answerModel = Answer_Model;\r\n        this.chats.unshift(chatModel);\r\n        this.selectedChatIndex = 0;\r\n        this.isLoading = false;\r\n        this.userQuestion = '';\r\n        //this.getChatHistoryByUser(this.user.userId);\r\n      }, error => {\r\n        this.isLoading = false;\r\n      });\r\n      this.isContainerHidden = true;\r\n    } \r\n  }\r\n\r\n  handleQuestionSelect(index: number): void {\r\n    this.selectedChatIndex = index;\r\n  }\r\n}\r\n","\r\n<div class=\"wrapper\">\r\n  <!--<app-sidebar [history]=\"history\" [showViewMore]=\"showViewMore\"></app-sidebar> -->\r\n  <app-sidebar></app-sidebar>\r\n  <!-- Page Content  -->\r\n  <div id=\"content\">\r\n    <!-- <app-navbar [models]=\"models\" [user]=\"user\" [selectedModel]=\"selectedModel\"\r\n      (onChangeModel)=\"handleChangeModel($event)\">\r\n    </app-navbar> -->\r\n    <app-navbar></app-navbar>\r\n\r\n    <div class=\"content-wrapper\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6 offset-md-3\">\r\n          <div class=\"input-group mb-3\">\r\n            <div class=\"container text-center\" [hidden]=\"isContainerHidden\">\r\n              <div class=\"homelogo-container\" style=\"margin-bottom: 160px;\"> \r\n                <img class=\"mt-5 mb-3 custom-mt\" src=\"assets/images/minerva-logo.png\" width=\"250\" />\r\n                <h4>How can I help you today?</h4>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">\r\n                            <p class=\"card-text\" (click)=\"copyQuestion('Which companies are required to report under the CSRD?')\">Which companies are required to report under the CSRD?</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body\">\r\n                            <p class=\"card-text\" (click)=\"copyQuestion('What are the European Sustainability Reporting Standards (ESRS)?\r\n                            ')\">What are the European Sustainability Reporting Standards (ESRS)?\r\n                          </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-6\">\r\n                  <div class=\"card\">\r\n                      <div class=\"card-body\">\r\n                          <p class=\"card-text\" (click)=\"copyQuestion('What types of information must be included in sustainability reports?\r\n                          ')\">What types of information must be included in sustainability reports?\r\n                        </p>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                  <div class=\"card\">\r\n                      <div class=\"card-body\">\r\n                          <p class=\"card-text\" (click)=\"copyQuestion('How can companies prepare for compliance with the CSRD?')\">How can companies prepare for compliance with the CSRD?</p>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n            \r\n\r\n\r\n          </div>\r\n          \r\n            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"userQuestion\" (keyup.enter)=\"onQuestionSubmit()\"\r\n              placeholder=\"Message Minerva...\" aria-label=\"Write your message\" aria-describedby=\"basic-addon2\">\r\n            <button type=\"submit\" class=\"input-group-text btn btn-outline-success\" id=\"basic-addon2\"\r\n              (click)=\"onQuestionSubmit();\">Send</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row m-5\" *ngIf=\"this.isLoading\">\r\n        <div class=\"d-flex justify-content-center\">\r\n          <div class=\"spinner-border text-primary\" role=\"status\">\r\n            <span class=\"visually-hidden\">Loading...</span>\r\n          </div>\r\n          <div class=\"ms-2\">Processing</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12 col-md-6 col-lg-6\">\r\n          <app-chat [chats]=\"chats\" [selectedChatIndex]=\"selectedChatIndex\"\r\n            (onQuestionSelect)=\"handleQuestionSelect($event)\"></app-chat>\r\n        </div>\r\n        <div class=\"col-sm-12 col-md-6 col-lg-6\">\r\n          <app-documents [sourceDocuments]=\"chats[selectedChatIndex]?.answerModel?.sourceDocuments\"></app-documents>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n\r\n<style>\r\n  /* Custom styles */\r\n  .col-6 {\r\n    background-color: #f0f0f0; /* Background color */\r\n    border: 1px solid #ccc; /* Border */\r\n    border-radius: 5px; /* Border radius */\r\n    margin-bottom: 20px; /* Bottom margin */\r\n  /* Left margin */\r\n  }\r\n\r\n  .p-3 {\r\n    font-weight: bold; /* Bold text */\r\n    color: #333; /* Text color */\r\n    margin-left: 5px; /* Left margin */\r\n  }\r\n\r\n.card {\r\n    border: 1px solid #ccc;\r\n    border-radius: 10px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    transition: box-shadow 0.3s ease;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.card:hover {\r\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.card-title {\r\n    color: #333;\r\n    font-size: 1.2rem;\r\n}\r\n\r\n.card-text {\r\n    color: #666;\r\n}\r\n\r\n.container {\r\n    padding-top: 20px;\r\n    padding-bottom: 20px;\r\n}\r\n\r\n.row {\r\n    margin-left: -15px;\r\n    margin-right: -15px;\r\n}\r\n\r\n.card-body {\r\n    padding: 20px;\r\n}\r\n\r\n\r\n  .logo-text {\r\n      font-size: 24px; /* Adjust size as needed */\r\n      font-weight: bold; /* Adjust weight as needed */\r\n  }\r\n  \r\n</style>\r\n","<div class=\"accordion\" id=\"accordionPanelsStayOpenExample\">\r\n  <div class=\"accordion-item\" *ngFor=\"let sourceDocument of sourceDocuments; let i = index\">\r\n    <h1 class=\"accordion-header\">\r\n      <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\r\n        [attr.data-bs-target]=\"'#panelsStayOpen-collapseOne-' + i\" aria-expanded=\"false\"\r\n        aria-controls=\"panelsStayOpen-collapseOne\">\r\n        {{ sourceDocument.source }}\r\n      </button>\r\n    </h1>\r\n    <div [id]=\"'panelsStayOpen-collapseOne-' + i\" class=\"accordion-collapse collapse\">\r\n      <div class=\"accordion-body\">\r\n        {{ sourceDocument.pageContent }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { SourceDocumentModel } from 'src/app/core/models/source-document.model';\r\n\r\n@Component({\r\n  selector: 'app-documents',\r\n  templateUrl: './documents.component.html',\r\n  styleUrls: ['./documents.component.scss']\r\n})\r\nexport class DocumentsComponent implements OnInit{\r\n  @Input() sourceDocuments: Array<SourceDocumentModel> = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { RequestManagerService } from \"./request-manager.service\";\r\nimport { UrlConfigs } from \"src/app/shared/url-configs/url-configs\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  export class HistoryService {\r\n  \r\n    constructor(private restApiService:RequestManagerService,\r\n        private urlConfig: UrlConfigs\r\n      ) { }\r\n  \r\n    public getChatHistoryByUser(id: number): Observable<any> {\r\n      let url = `${this.urlConfig.getValueByKey('ChatHistoryByUser')}`;\r\n      url = url.replace('${id}', String(id));\r\n      return this.restApiService.get(url);\r\n    }\r\n  \r\n    public getChatHistoryByDate(id: number, createdOn: string){\r\n      let url = `${this.urlConfig.getValueByKey('ChatHistoryByDate')}`;\r\n      url = url.replace('${id}', String(id));\r\n      url = url.replace('${date}', encodeURIComponent(createdOn));\r\n      return this.restApiService.get(url);\r\n    }\r\n  \r\n}\r\n  ","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  // identityServerURL: 'http://127.0.0.1:8000'  // for local\r\n  // identityServerURL: 'http://0.0.0.0:8080' // for Network\r\n  identityServerURL: 'http://127.0.0.1:8000' // for Network\r\n  // identityServerURL: 'http://minerva-esg-ai-agent-demo-backend.azurewebsites.net' // for azure app service\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { AiModel } from \"src/app/shared/enums/ai-model.enum\";\r\n\r\nexport class QuestionModel {\r\n    user_input: string;\r\n    // userId: number;\r\n    // aiModel: AiModel;\r\n}","export class AppConstant {\r\n    static readonly Today = 'Today';\r\n    static readonly Yesterday = 'Yesterday';\r\n    static readonly User: string = 'User';\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CoreComponent } from './core.component';\r\n\r\nconst routes: Routes = [{ path: '', component: CoreComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CoreRoutingModule { }\r\n","import { UserModel } from \"src/app/core/models/user.model\";\r\nimport { AppConstant } from \"../app-constants/app-constants\";\r\n\r\nexport const getLoggedInUser = (): UserModel => {\r\n    const user: UserModel = JSON.parse(localStorage.getItem(AppConstant.User));\r\n    return user;\r\n}\r\n\r\nexport const saveUser = (user: UserModel): void => {\r\n    localStorage.setItem(AppConstant.User, JSON.stringify(user));\r\n}\r\n\r\nexport const clearUser = (): void => {\r\n    localStorage.removeItem(AppConstant.User);\r\n}\r\n\r\nexport const isLoggedIn = (): boolean => {\r\n    const user = localStorage.getItem(AppConstant.User);\r\n    if(user){\r\n        return true;\r\n    }\r\n    return false;\r\n} ","import { Component, EventEmitter,Input, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AiModelModel } from 'src/app/core/models/ai-model.model';\r\nimport { UserModel } from 'src/app/core/models/user.model';\r\nimport { AuthenticationService } from 'src/app/core/services/authentication.service';\r\nimport { getLoggedInUser, clearUser } from 'src/app/shared/helpers/auth';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  @Input() models: Array<AiModelModel>;\r\n  @Input() selectedModel: AiModelModel;\r\n  @Output() onLogout: EventEmitter<any> = new EventEmitter();\r\n  @Output() onChangeModel: EventEmitter<any> = new EventEmitter();\r\n\r\n  user: UserModel;\r\n\r\n  constructor(\r\n    private authenticationService: AuthenticationService, \r\n    private router: Router,\r\n    private toastr: ToastrService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.user = getLoggedInUser();\r\n  }\r\n\r\n  logout(){\r\n      this.router.navigate(['']);\r\n\r\n  }\r\n\r\n  // changeModel(model: AiModelModel){\r\n  //   this.onChangeModel.emit(model);\r\n  // }\r\n\r\n}\r\n","<!-- NavBar Start-->\r\n<!-- <nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n    <ul class=\"nav nav-pills mb-3\" *ngFor=\"let model of models\">\r\n        <li class=\"nav-item\">\r\n          <button \r\n            class=\"nav-link\" \r\n            [ngClass]=\"{'active': selectedModel.type === model.type}\" \r\n            type=\"button\" \r\n            role=\"tab\"\r\n            (click)=\"changeModel(model)\"\r\n          >\r\n            {{model.name}}\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    <div class=\"mx-2 bg-secondary\">\r\n        {{user.userName[0]}}\r\n    </div>\r\n    <a class=\"mx-2\" (click)=\"logout()\">\r\n        <i class=\"pi pi-sign-out\" ngbTooltip=\"Logout\" placement=\"bottom\"></i>\r\n    </a>\r\n</nav> -->\r\n<!-- NavBar END -->\r\n\r\n<!-- Navbar -->\r\n<nav class=\"navbar navbar-dark bg-dark\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"d-flex justify-content-between bd-highlight\">\r\n      <!-- <a href=\"#\"><i class=\"fa-solid fa-bars\"></i></a> -->\r\n    </div>\r\n    <!-- <div class=\"d-flex justify-content-center\">\r\n      <div class=\"btn-group\" role=\"group\" aria-label=\"Basic radio toggle button group\">\r\n        <ng-container *ngFor=\"let model of models; let i = index\">\r\n          <input type=\"radio\" class=\"btn-check\" name=\"btnradio\" [id]=\"'btnradio' + i\" autocomplete=\"off\"\r\n            [checked]=\"model === selectedModel\" (change)=\"changeModel(model)\">\r\n          <label class=\"btn btn-outline-primary\" [for]=\"'btnradio' + i\">{{ \"Model \" + (i + 1) }}</label>\r\n        </ng-container>\r\n      </div>\r\n    </div> -->\r\n    <div>\r\n      <div class=\"d-flex justify-content-between bd-highlight\" (click)=\"logout()\">\r\n        <a><i class=\"fa-solid fa-power-off\"></i></a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-core',\r\n  templateUrl: './core.component.html',\r\n  styleUrls: ['./core.component.scss']\r\n})\r\nexport class CoreComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>core works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { isLoggedIn } from './shared/helpers/auth';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'AiQA-Web';\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CoreModule } from './core/core.module';\r\nimport { HistoryService } from './core/services/history.service';\r\nimport { AuthInterceptor } from './core/interceptors/auth.interceptor';\r\nimport { LogonComponent } from './features/logon/logon.component';\r\nimport { HomeComponent } from './features/home/home.component';\r\nimport { SidebarComponent } from './features/home/sidebar/sidebar.component';\r\nimport { NavbarComponent } from './features/home/navbar/navbar.component';\r\nimport { DocumentsComponent } from './features/home/documents/documents.component';\r\nimport { ChatComponent } from './features/home/chat/chat.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LogonComponent,\r\n    HomeComponent,\r\n    SidebarComponent,\r\n    NavbarComponent,\r\n    DocumentsComponent,\r\n    ChatComponent,\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    CommonModule,\r\n    CoreModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    ToastrModule.forRoot(),\r\n  ],\r\n  providers: [HistoryService, DatePipe,\r\n    {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthInterceptor,\r\n    multi: true,\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from \"src/environments/environment\";  // Import environment configuration\r\nimport { ChatModel } from 'src/app/core/models/chat-model';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.scss']\r\n})\r\nexport class ChatComponent {\r\n  @Input() chats: Array<ChatModel>;\r\n  @Input() selectedChatIndex: number;\r\n  @Output() onQuestionSelect: EventEmitter<number> = new EventEmitter();\r\n\r\n  constructor(private http: HttpClient,private toastr: ToastrService) { }\r\n\r\n  onSelect(index: number): void {\r\n    this.onQuestionSelect.emit(index);\r\n  }\r\n\r\n  thumbsUp(index: number) {\r\n    const question = this.chats[index].questionModel.user_input;\r\n    const botResponse = this.chats[index].answerModel.content;\r\n    const userFeedback = this.chats[index].userTypedMessage ? this.chats[index].userTypedMessage : ''; // Get user's typed message\r\n    const feedback = 'Good'; // Set feedback to 'Good'\r\n    this.sendFeedbackToBackend(question, botResponse, userFeedback, feedback);\r\n    this.chats[index].feedbackSubmitted = true; // Mark feedback as submitted\r\n    this.chats[index].userTypedMessage = ''; // Clear user's typed message\r\n    this.toastr.success('Thank you for your feedback!', 'Feedback Submitted');\r\n  }\r\n  \r\n  thumbsDown(index: number) {\r\n    const question = this.chats[index].questionModel.user_input;\r\n    const botResponse = this.chats[index].answerModel.content;\r\n    const userFeedback = this.chats[index].userTypedMessage ? this.chats[index].userTypedMessage : ''; // Get user's typed message\r\n    const feedback = 'Bad'; // Set feedback to 'Bad\r\n    this.sendFeedbackToBackend(question, botResponse, userFeedback, feedback);\r\n    this.chats[index].feedbackSubmitted = true; // Mark feedback as submitted\r\n    this.chats[index].userTypedMessage = ''; // Clear user's typed message\r\n    this.toastr.success('Thank you for your feedback!', 'Feedback Submitted');\r\n  }\r\n  \r\n  sendFeedbackToBackend(question: string, botResponse: string, userFeedback: string, feedback: string) {\r\n    const feedbackData = {\r\n      question: question,\r\n      botResponse: botResponse,\r\n      userFeedback: userFeedback,\r\n      feedback: feedback\r\n    };\r\n  \r\n    // Use the backend API URL from environment configuration\r\n    const apiUrl = `${environment.identityServerURL}/feedback`;\r\n  \r\n    this.http.post(apiUrl, feedbackData).subscribe(\r\n      (response) => {\r\n        console.log('Feedback sent successfully:', response);\r\n      },\r\n      (error) => {\r\n        console.error('Error sending feedback:', error);\r\n      }\r\n    );\r\n  }\r\n  \r\n  \r\n}\r\n","<div id=\"frame\">\r\n  <div class=\"content\">\r\n    <div class=\"messages\">\r\n      <ul>\r\n        <ng-container *ngFor=\"let chat of chats; let i = index\">\r\n          <li class=\"sent\">\r\n            <div class=\"d-flex\">\r\n              <div><img src=\"../assets/images/man.png\" alt=\"\" /></div>\r\n              <div class=\"flex-grow-1\">\r\n                <h6>You</h6>\r\n                <p>{{ chat.questionModel.user_input }}</p>\r\n              </div>\r\n            </div>\r\n          </li>\r\n          <li class=\"replies\" [ngClass]=\"{'typing': i === selectedChatIndex}\">\r\n            <div class=\"d-flex\">\r\n              <div><img src=\"../assets/images/robot.png\" alt=\"\" width=\"200px\"/></div>\r\n              <div class=\"flex-grow-1\">\r\n                <h6>Minerva</h6>\r\n                <p [class.active]=\"i === selectedChatIndex\">{{ chat.answerModel.content }}\r\n                  <br>\r\n                  <input type=\"text\" class=\"form-control\" [(ngModel)]=\"chat.userTypedMessage\"\r\n                  placeholder=\"Type your feedback here... and then hit 👍/👎\" aria-label=\"Write your message\" *ngIf=\"!chat.feedbackSubmitted\">  \r\n                  <button *ngIf=\"!chat.feedbackSubmitted\" (click)=\"thumbsUp(i)\">👍</button>\r\n                  <button *ngIf=\"!chat.feedbackSubmitted\" (click)=\"thumbsDown(i)\">👎</button>              \r\n                </p>\r\n              </div>\r\n            </div>\r\n          </li>          \r\n        </ng-container>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { QueryModel } from 'src/app/core/models/query.model';\r\nimport { HomeComponent } from '../home.component';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.scss']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  // @Input() history: Array<Array<QueryModel>>;\r\n  // @Input() showViewMore: Object = {};\r\n\r\n  // indexToHide: number;\r\n  // activeQuery: QueryModel = null;\r\n\r\n  constructor(private homeComponent: HomeComponent) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  // viewMore(dayQueries: Array<QueryModel>){\r\n  //   this.homeComponent.viewMore(dayQueries);\r\n  // }\r\n\r\n  // showChat(query: QueryModel){\r\n  //   this.activeQuery = query;\r\n  //   this.homeComponent.showChat(query);\r\n  // }\r\n\r\n  // isActive(query: QueryModel): boolean {\r\n  //   return this.activeQuery === query;\r\n  // }\r\n\r\n  // clearChat(){\r\n  //   this.homeComponent.chats = [];\r\n  // }\r\n}\r\n","<nav id=\"sidebar\">\r\n  <div class=\"sidebar-header\">\r\n    <a href=\"index.html\">\r\n      <img src=\"assets/images/minerva-logo-white.png\" width=\"140\" />\r\n    </a>\r\n  </div>\r\n  <!-- <div class=\"bg-body-tertiary\">\r\n    <div class=\"btn-wrapper d-grid\">\r\n      <button class=\"custom-btn btn-block\" (click)=\"clearChat()\">Clear Chat</button>\r\n    </div>\r\n    <div class=\"history-wrapper\">\r\n      <div *ngFor=\"let dayQueries of history\">\r\n        <div class=\"list-group list-group-flush px-3 section-wrapper\">\r\n          <h6>{{dayQueries[dayQueries.length-1].createdOn}}</h6>\r\n          <ul class=\"mb-0\">\r\n            <div class=\"list-item-wrapper\" *ngFor=\"let query of dayQueries ; let i = index\">\r\n              <li *ngIf=\"i!=dayQueries.length-1\">\r\n                <a class=\"list-group-item list-group-item-action active py-2 lh-sm\" aria-current=\"true\"\r\n                  (click)=\"showChat(query)\">\r\n                  <div [class]=\"isActive(query)? 'active' : 'small'\">{{query.question}}</div>\r\n                </a>\r\n              </li>\r\n            </div>\r\n          </ul>\r\n          <button class=\"list-group-item list-group-item-action view-more\" aria-current=\"true\"\r\n            (click)=\"viewMore(dayQueries)\" *ngIf=\"showViewMore[dayQueries[0].createdOn]\">\r\n            <div class=\"small\">View More</div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div> \r\n  </div> -->\r\n</nav>\r\n\r\n<style>\r\n  .logo-text {\r\n      font-size: 20px; /* Adjust size as needed */\r\n      font-weight: bold; /* Adjust weight as needed */\r\n      color: #000;\r\n  }\r\n</style>","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { getLoggedInUser, clearUser } from 'src/app/shared/helpers/auth';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private router: Router,\r\n    private authService: AuthenticationService,\r\n    private toastr: ToastrService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const authToken = getLoggedInUser()?.token;\r\n\r\n    if (authToken) {\r\n      const authRequest = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${authToken}`,\r\n        },\r\n      });\r\n      return next.handle(authRequest).pipe(tap(() => {}, \r\n      (err: any) => {\r\n        if (err instanceof HttpErrorResponse) {\r\n          if (err.status !== 401){\r\n            return this.toastr.error(\"Something went wrong. Please try again later.\");\r\n          }\r\n          const user = getLoggedInUser();\r\n          this.authService.logOut(user.userName).subscribe((response) => {\r\n            clearUser();\r\n            this.router.navigate(['/login']);\r\n            return this.toastr.error(\"Your session has expired.\");\r\n          });\r\n          return false;\r\n        }\r\n      }\r\n      ))\r\n    }\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { RequestManagerService } from \"./request-manager.service\";\r\nimport { UrlConfigs } from \"src/app/shared/url-configs/url-configs\";\r\nimport { Observable } from \"rxjs\";\r\nimport { QuestionModel } from '../models/question.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatService {\r\n\r\n  constructor(private restApiService:RequestManagerService,\r\n    private urlConfig: UrlConfigs) { }\r\n\r\n  getModels(): Observable<any> {\r\n    let url = `${this.urlConfig.getValueByKey('AiModels')}`;\r\n    return this.restApiService.get(url);\r\n  }\r\n\r\n  generateAnswer(questionModel): Observable<any> {\r\n    let url = `${this.urlConfig.getValueByKey('GenerateAnswer')}`;\r\n    console.log(url);\r\n    return this.restApiService.post(url, questionModel);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class RequestManagerService{\r\n    private apiUrl = environment.identityServerURL;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    public get(endpoint: string): Observable<any> {\r\n        const url = `${this.apiUrl}/${endpoint}`;\r\n        return this.http.get(url);\r\n    }\r\n\r\n    public post(endpoint: string, data: any): Observable<any> {\r\n        const url = `${this.apiUrl}/${endpoint}`;\r\n        return this.http.post(url, data);\r\n    }\r\n\r\n    public put(endpoint: string, data: any): Observable<any> {\r\n        const url = `${this.apiUrl}/${endpoint}`;\r\n        return this.http.put(url, data);\r\n    }\r\n\r\n    public delete(endpoint: string): Observable<any> {\r\n        const url = `${this.apiUrl}/${endpoint}`;\r\n        return this.http.delete(url);\r\n    }\r\n\r\n   \r\n}","import { Injectable } from '@angular/core';\r\nimport { KeyValueModel } from 'src/app/core/models/key-value.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UrlConfigs {\r\n    private urlList: KeyValueModel[];\r\n\r\n  constructor() {\r\n    this.UrlInit();\r\n  }\r\n\r\n  public UrlInit() {\r\n\r\n    this.urlList = [\r\n      {\r\n        key: \"AiModels\",\r\n        value: \"Chat/ai-models\"\r\n      },\r\n      {\r\n        key: 'ChatHistoryByUser',\r\n        value: 'History/get-chat-history?UserId=${id}'\r\n      },\r\n      {\r\n        key: 'ChatHistoryByDate',\r\n        value: 'History/get-chat-history-by-date?UserId=${id}&createdOn=${date}'\r\n      },\r\n      {\r\n        key: 'GenerateAnswer',\r\n        value: 'chat'\r\n      },\r\n      {\r\n        key: 'Login',\r\n        value: 'Auth/login'\r\n      },\r\n      {\r\n        key: 'Logout',\r\n        value: 'Auth/logout'\r\n      }\r\n    ];\r\n  }\r\n\r\n  public setValue(list: KeyValueModel[]) {\r\n    this.urlList = list;\r\n  }\r\n\r\n  public getValueByKey(key: string) {\r\n    return this.urlList.filter(item => item.key === key)[0].value;\r\n  }\r\n\r\n  public getLength() {\r\n    return this.urlList.length;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CoreRoutingModule } from './core-routing.module';\r\nimport { CoreComponent } from './core.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CoreComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    CoreRoutingModule\r\n  ]\r\n})\r\nexport class CoreModule { }\r\n","import { AnswerModel } from \"./answer.model\";\r\nimport { QuestionModel } from \"./question.model\";\r\n\r\nexport class ChatModel {\r\n    questionModel: QuestionModel;\r\n    answerModel: AnswerModel;\r\n    feedback: string; // Add the feedback property\r\n    feedbackSubmitted: boolean = false; // Track whether feedback has been submitted\r\n    userTypedMessage: string; // Add the userTypedMessage property\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LogonComponent } from './features/logon/logon.component';\r\nimport { HomeComponent } from './features/home/home.component';\r\nimport { AuthGuard } from './core/guards/auth.gaurd';\r\n\r\nconst routes: Routes = [ \r\n                        { path: '', component: LogonComponent, data: { title: 'Login Page' }},\r\n                        { path: 'home', component: HomeComponent, data: { title: 'Home Page' }}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { UserModel } from 'src/app/core/models/user.model';\r\nimport { AuthenticationService } from 'src/app/core/services/authentication.service';\r\nimport { saveUser } from 'src/app/shared/helpers/auth';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-logon',\r\n  templateUrl: './logon.component.html',\r\n  styleUrls: ['./logon.component.scss']\r\n})\r\nexport class LogonComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted: boolean = false;\r\n  submitButtonDisabled: boolean = false; \r\n  maxPasswordLength = 15;\r\n\r\n  constructor(private formBuilder: FormBuilder, \r\n    private authService: AuthenticationService, \r\n    private router: Router,\r\n    private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.maxLength(15)]]\r\n    })\r\n  }\r\n  login() {\r\n    // Navigate to the home page\r\n    this.router.navigate(['/home']); // Replace 'home' with the actual route path for your home page\r\n  }\r\n\r\n  get f() { return this.loginForm.controls; }\r\n  \r\n  onSubmit() {\r\n    this.submitButtonDisabled = true;\r\n    this.submitted = true;\r\n    this.router.navigate(['/home'])\r\n\r\n    if (this.loginForm.invalid) {\r\n      this.submitButtonDisabled = false;\r\n      return;\r\n    }\r\n\r\n    this.authService.logOn(this.f.username.value, this.f.password.value).subscribe(\r\n      response => {\r\n          this.submitButtonDisabled = false;\r\n          const userModel: UserModel = response;\r\n          saveUser(userModel);\r\n          this.router.navigate(['/home']);\r\n      },\r\n      error => {\r\n          this.submitButtonDisabled = false;\r\n          this.toastr.error(error.error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<section class=\"h-100\">\r\n    <!-- <div id=\"bg-wrap\">\r\n        <svg viewBox=\"0 0 100 100\" class=\"svg-wrap\" preserveAspectRatio=\"xMidYMid slice\">\r\n            <defs>\r\n                <radialGradient id=\"Gradient1\" cx=\"50%\" cy=\"50%\" fx=\"0.441602%\" fy=\"50%\" r=\".5\">\r\n                    <animate attributeName=\"fx\" dur=\"34s\" values=\"0%;3%;0%\" repeatCount=\"indefinite\"></animate>\r\n                    <stop offset=\"0%\" stop-color=\"rgba(255, 0, 255, 1)\"></stop>\r\n                    <stop offset=\"100%\" stop-color=\"rgba(255, 0, 255, 0)\"></stop>\r\n                </radialGradient>\r\n                <radialGradient id=\"Gradient2\" cx=\"50%\" cy=\"50%\" fx=\"2.68147%\" fy=\"50%\" r=\".5\">\r\n                    <animate attributeName=\"fx\" dur=\"23.5s\" values=\"0%;3%;0%\" repeatCount=\"indefinite\"></animate>\r\n                    <stop offset=\"0%\" stop-color=\"rgba(255, 255, 0, 1)\"></stop>\r\n                    <stop offset=\"100%\" stop-color=\"rgba(255, 255, 0, 0)\"></stop>\r\n                </radialGradient>\r\n                <radialGradient id=\"Gradient3\" cx=\"50%\" cy=\"50%\" fx=\"0.836536%\" fy=\"50%\" r=\".5\">\r\n                    <animate attributeName=\"fx\" dur=\"21.5s\" values=\"0%;3%;0%\" repeatCount=\"indefinite\"></animate>\r\n                    <stop offset=\"0%\" stop-color=\"rgba(0, 255, 255, 1)\"></stop>\r\n                    <stop offset=\"100%\" stop-color=\"rgba(0, 255, 255, 0)\"></stop>\r\n                </radialGradient>\r\n                <radialGradient id=\"Gradient4\" cx=\"50%\" cy=\"50%\" fx=\"4.56417%\" fy=\"50%\" r=\".5\">\r\n                    <animate attributeName=\"fx\" dur=\"23s\" values=\"0%;5%;0%\" repeatCount=\"indefinite\"></animate>\r\n                    <stop offset=\"0%\" stop-color=\"rgba(0, 255, 0, 1)\"></stop>\r\n                    <stop offset=\"100%\" stop-color=\"rgba(0, 255, 0, 0)\"></stop>\r\n                </radialGradient>\r\n                <radialGradient id=\"Gradient5\" cx=\"50%\" cy=\"50%\" fx=\"2.65405%\" fy=\"50%\" r=\".5\">\r\n                    <animate attributeName=\"fx\" dur=\"24.5s\" values=\"0%;5%;0%\" repeatCount=\"indefinite\"></animate>\r\n                    <stop offset=\"0%\" stop-color=\"rgba(0,0,255, 1)\"></stop>\r\n                    <stop offset=\"100%\" stop-color=\"rgba(0,0,255, 0)\"></stop>\r\n                </radialGradient>\r\n                <radialGradient id=\"Gradient6\" cx=\"50%\" cy=\"50%\" fx=\"0.981338%\" fy=\"50%\" r=\".5\">\r\n                    <animate attributeName=\"fx\" dur=\"25.5s\" values=\"0%;5%;0%\" repeatCount=\"indefinite\"></animate>\r\n                    <stop offset=\"0%\" stop-color=\"rgba(255,0,0, 1)\"></stop>\r\n                    <stop offset=\"100%\" stop-color=\"rgba(255,0,0, 0)\"></stop>\r\n                </radialGradient>\r\n            </defs>\r\n\r\n            <rect x=\"13.744%\" y=\"1.18473%\" width=\"100%\" height=\"100%\" fill=\"url(#Gradient1)\"\r\n                transform=\"rotate(334.41 50 50)\">\r\n                <animate attributeName=\"x\" dur=\"20s\" values=\"25%;0%;25%\" repeatCount=\"indefinite\"></animate>\r\n                <animate attributeName=\"y\" dur=\"21s\" values=\"0%;25%;0%\" repeatCount=\"indefinite\"></animate>\r\n                <animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 50 50\" to=\"360 50 50\" dur=\"7s\"\r\n                    repeatCount=\"indefinite\"></animateTransform>\r\n            </rect>\r\n            <rect x=\"-2.17916%\" y=\"35.4267%\" width=\"100%\" height=\"100%\" fill=\"url(#Gradient2)\"\r\n                transform=\"rotate(255.072 50 50)\">\r\n                <animate attributeName=\"x\" dur=\"23s\" values=\"-25%;0%;-25%\" repeatCount=\"indefinite\"></animate>\r\n                <animate attributeName=\"y\" dur=\"24s\" values=\"0%;50%;0%\" repeatCount=\"indefinite\"></animate>\r\n                <animateTransform attributeName=\"transform\" type=\"rotate\" from=\"0 50 50\" to=\"360 50 50\" dur=\"12s\"\r\n                    repeatCount=\"indefinite\"></animateTransform>\r\n            </rect>\r\n            <rect x=\"9.00483%\" y=\"14.5733%\" width=\"100%\" height=\"100%\" fill=\"url(#Gradient3)\"\r\n                transform=\"rotate(139.903 50 50)\">\r\n                <animate attributeName=\"x\" dur=\"25s\" values=\"0%;25%;0%\" repeatCount=\"indefinite\"></animate>\r\n                <animate attributeName=\"y\" dur=\"12s\" values=\"0%;25%;0%\" repeatCount=\"indefinite\"></animate>\r\n                <animateTransform attributeName=\"transform\" type=\"rotate\" from=\"360 50 50\" to=\"0 50 50\" dur=\"9s\"\r\n                    repeatCount=\"indefinite\"></animateTransform>\r\n            </rect>\r\n        </svg>\r\n    </div> -->\r\n    <div id=\"bg-wrap\">\r\n        \r\n    </div>\r\n    <div class=\"container py-2 h-100\">\r\n        <div class=\"row d-flex justify-content-center align-items-center h-100\">\r\n            <div class=\"col-xl-10\">\r\n                <div class=\"card rounded-3 border-0\">\r\n                    <div class=\"row g-0 align-items-center\">\r\n                        <div class=\"col-lg-6 d-flex align-items-center gradient-custom-2\">\r\n                            <div class=\"text-white px-3 py-4 p-md-5 mx-md-4 custom-padding\">\r\n                                <h1 class=\"mb-0 custom-large-text\"></h1>\r\n                                <h5 class=\"mb-0 custom-small-text\"></h5>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-lg-6\">\r\n                            <div class=\"uni-logo text-center\">\r\n                                <!-- University logo here -->\r\n                            </div>\r\n                            <div class=\"px-3 py-4 p-md-5 mx-md-4\">\r\n                                <div class=\"px-5\">\r\n                                    <img class=\"mt-5 mb-3 custom-mt\" src=\"assets/images/minerva-logo.png\" width=\"250\" />\r\n                                </div>\r\n                                <div>\r\n                                    <div class=\"d-grid\">\r\n                                        <button id=\"loginBtn\" type=\"submit\" class=\"btn btn-primary btn-login\" (click)=\"login()\">\r\n                                            GET STARTED\r\n                                        </button>\r\n                                    </div>      \r\n                                </div> \r\n                            </div>   \r\n                            <div class=\"disclaimer p-md-3 mx-md-2 mt-auto\">\r\n                                <p class=\"mx-md-5 custom-small-text\">\r\n                                    DISCLAIMER :\r\n                                </p>\r\n                                <p class=\"mx-md-5 disclaimer-text justify-text\">\r\n                                    This AI powered system is currently in a testing phase with limited data resources. The information generated by the model may not be always accurate and reliable. Users are advised to verify the information received and should not rely solely on the outputs provided for any critical or decision making purposes.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row py-2 position-absolute bottom-0 start-50 translate-middle-x\">\r\n            <div class=\"col text-center copywrite-text\">\r\n                <p style=\"color: white; padding: 10px; border-radius: 5px;\">\r\n                    Copyright © 2024 - IronOne Technologies, All Rights Reserved.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<style>\r\n    .logo-text {\r\n        font-size: 28px; /* Adjust size as needed */\r\n        font-weight: bold; /* Adjust weight as needed */\r\n    }\r\n    .justify-text {\r\n        text-align: justify;\r\n    }\r\n\r\n</style>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { clearUser, getLoggedInUser } from 'src/app/shared/helpers/auth';\r\nimport { UrlConfigs } from 'src/app/shared/url-configs/url-configs';\r\nimport { RequestManagerService } from './request-manager.service';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n    constructor(private router: Router, private restApiService:RequestManagerService,\r\n        private urlConfig: UrlConfigs) {}\r\n\r\n    logOn(username: string, password: string) {\r\n        let url = `${this.urlConfig.getValueByKey('Login')}`;\r\n        return this.restApiService.post(url, {username, password});\r\n    }\r\n\r\n    logOut(username: string) {\r\n        let url = `${this.urlConfig.getValueByKey('Logout')}`;\r\n        return this.restApiService.post(url, {username});\r\n    }\r\n\r\n    isTokenExpired(): boolean {\r\n        const token = getLoggedInUser()?.token;\r\n        if (!token) {\r\n            return true;\r\n        }\r\n        const decodedToken: any = jwtDecode(token);\r\n        return Date.now() >= decodedToken.exp * 1000;\r\n    }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}